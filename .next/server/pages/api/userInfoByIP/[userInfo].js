"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
(() => {
var exports = {};
exports.id = "pages/api/userInfoByIP/[userInfo]";
exports.ids = ["pages/api/userInfoByIP/[userInfo]"];
exports.modules = {

/***/ "(api)/./pages/api/userInfoByIP/[userInfo].ts":
/*!**********************************************!*\
  !*** ./pages/api/userInfoByIP/[userInfo].ts ***!
  \**********************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   \"default\": () => (/* binding */ handler)\n/* harmony export */ });\nasync function handler(req, res) {\n    const HasZipCode = (obj)=>{\n        for (const x of obj){\n            const elem = x.address_components;\n            if (!isNaN(elem[elem.length - 1].long_name.replaceAll(\" \", \"\"))) {\n                return elem[elem.length - 1].long_name;\n            }\n        }\n        return \"00000\";\n    };\n    const getcoding = async (lat, lon)=>{\n        return fetch(`https://maps.googleapis.com/maps/api/geocode/json?latlng=` + lat + `,` + lon + `&key=` + \"your API key\").then((res)=>res.json()).then((data)=>{\n            const result = data.results;\n            return HasZipCode(result);\n        // return data;\n        }).catch((err)=>{\n            console.error(\"When fetching data from google api : \\n\", err);\n            return \"00000\";\n        });\n    };\n    const geolocation = async (ip)=>{\n        return fetch(`http://ip-api.com/json/` + ip).then((res)=>res.json()).then(async (data)=>{\n            return {\n                zip: await getcoding(data.lat, data.lon),\n                country: data.country,\n                countryCode: data.countryCode,\n                region: data.region,\n                regionName: data.regionName,\n                city: data.city,\n                datetime: new Date().toLocaleString(\"en-US\", {\n                    timeZone: data.timezone\n                }),\n                lat: data.lat,\n                lon: data.lon,\n                timezone: data.timezone,\n                isp: data.isp,\n                org: data.org,\n                as: data.as,\n                query: data.query\n            };\n        }).catch((err)=>console.log(err));\n    };\n    const result = await geolocation(req.query.userInfo);\n    res.status(200).json(result);\n};\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwaSkvLi9wYWdlcy9hcGkvdXNlckluZm9CeUlQL1t1c2VySW5mb10udHMuanMiLCJtYXBwaW5ncyI6Ijs7OztBQUFlLGVBQWVBLE9BQU8sQ0FBQ0MsR0FBRyxFQUFFQyxHQUFHLEVBQUU7SUFDN0MsTUFBTUMsVUFBVSxHQUFHQyxDQUFBQSxHQUFHLEdBQUk7UUFDdkIsS0FBSyxNQUFNQyxDQUFDLElBQUlELEdBQUcsQ0FBRTtZQUNuQixNQUFNRSxJQUFJLEdBQUdELENBQUMsQ0FBQ0Usa0JBQWtCO1lBQ2pDLElBQUksQ0FBQ0MsS0FBSyxDQUFDRixJQUFJLENBQUNBLElBQUksQ0FBQ0csTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDQyxTQUFTLENBQUNDLFVBQVUsQ0FBQyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsRUFBRTtnQkFDL0QsT0FBT0wsSUFBSSxDQUFDQSxJQUFJLENBQUNHLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQ0MsU0FBUyxDQUFDO2FBQ3hDO1NBQ0Y7UUFDRCxPQUFPLE9BQU8sQ0FBQztLQUNoQjtJQUNELE1BQU1FLFNBQVMsR0FBRyxPQUFPQyxHQUFXLEVBQUVDLEdBQVcsR0FBSztRQUNwRCxPQUFPQyxLQUFLLENBQ1YsQ0FBQyx5REFBeUQsQ0FBQyxHQUN6REYsR0FBRyxHQUNILENBQUMsQ0FBQyxDQUFDLEdBQ0hDLEdBQUcsR0FDSCxDQUFDLEtBQUssQ0FBQyxHQUNQRSxjQUFzQyxDQUN6QyxDQUNFRyxJQUFJLENBQUNqQixDQUFBQSxHQUFHLEdBQUlBLEdBQUcsQ0FBQ2tCLElBQUksRUFBRSxDQUFDLENBQ3ZCRCxJQUFJLENBQUNFLENBQUFBLElBQUksR0FBSTtZQUNaLE1BQU1DLE1BQU0sR0FBR0QsSUFBSSxDQUFDRSxPQUFPO1lBQzNCLE9BQU9wQixVQUFVLENBQUNtQixNQUFNLENBQUMsQ0FBQztRQUMxQixlQUFlO1NBQ2hCLENBQUMsQ0FDREUsS0FBSyxDQUFDQyxDQUFBQSxHQUFHLEdBQUk7WUFDWkMsT0FBTyxDQUFDQyxLQUFLLENBQUMseUNBQXlDLEVBQUVGLEdBQUcsQ0FBQyxDQUFDO1lBQzlELE9BQU8sT0FBTyxDQUFDO1NBQ2hCLENBQUMsQ0FBQztLQUNOO0lBQ0QsTUFBTUcsV0FBVyxHQUFHLE9BQU1DLEVBQUUsR0FBSTtRQUM5QixPQUFPZCxLQUFLLENBQUMsQ0FBQyx1QkFBdUIsQ0FBQyxHQUFHYyxFQUFFLENBQUMsQ0FDekNWLElBQUksQ0FBQ2pCLENBQUFBLEdBQUcsR0FBSUEsR0FBRyxDQUFDa0IsSUFBSSxFQUFFLENBQUMsQ0FDdkJELElBQUksQ0FBQyxPQUFNRSxJQUFJLEdBQUk7WUFDbEIsT0FBUTtnQkFDTlMsR0FBRyxFQUFFLE1BQU1sQixTQUFTLENBQUNTLElBQUksQ0FBQ1IsR0FBRyxFQUFFUSxJQUFJLENBQUNQLEdBQUcsQ0FBQztnQkFDeENpQixPQUFPLEVBQUVWLElBQUksQ0FBQ1UsT0FBTztnQkFDckJDLFdBQVcsRUFBRVgsSUFBSSxDQUFDVyxXQUFXO2dCQUM3QkMsTUFBTSxFQUFFWixJQUFJLENBQUNZLE1BQU07Z0JBQ25CQyxVQUFVLEVBQUViLElBQUksQ0FBQ2EsVUFBVTtnQkFDM0JDLElBQUksRUFBRWQsSUFBSSxDQUFDYyxJQUFJO2dCQUNmQyxRQUFRLEVBQUUsSUFBSUMsSUFBSSxFQUFFLENBQUNDLGNBQWMsQ0FBQyxPQUFPLEVBQUU7b0JBQzNDQyxRQUFRLEVBQUVsQixJQUFJLENBQUNtQixRQUFRO2lCQUN4QixDQUFDO2dCQUNGM0IsR0FBRyxFQUFFUSxJQUFJLENBQUNSLEdBQUc7Z0JBQ2JDLEdBQUcsRUFBRU8sSUFBSSxDQUFDUCxHQUFHO2dCQUNiMEIsUUFBUSxFQUFFbkIsSUFBSSxDQUFDbUIsUUFBUTtnQkFDdkJDLEdBQUcsRUFBRXBCLElBQUksQ0FBQ29CLEdBQUc7Z0JBQ2JDLEdBQUcsRUFBRXJCLElBQUksQ0FBQ3FCLEdBQUc7Z0JBQ2JDLEVBQUUsRUFBRXRCLElBQUksQ0FBQ3NCLEVBQUU7Z0JBQ1hDLEtBQUssRUFBRXZCLElBQUksQ0FBQ3VCLEtBQUs7YUFDbEIsQ0FBQztTQUVILENBQUMsQ0FDRHBCLEtBQUssQ0FBQ0MsQ0FBQUEsR0FBRyxHQUFJQyxPQUFPLENBQUNtQixHQUFHLENBQUNwQixHQUFHLENBQUMsQ0FBQyxDQUFDO0tBQ25DO0lBQ0QsTUFBTUgsTUFBTSxHQUFHLE1BQU1NLFdBQVcsQ0FBQzNCLEdBQUcsQ0FBQzJDLEtBQUssQ0FBQ0UsUUFBUSxDQUFDO0lBQ3JENUMsR0FBRyxDQUFDNkMsTUFBTSxDQUFDLEdBQUcsQ0FBQyxDQUFDM0IsSUFBSSxDQUFDRSxNQUFNLENBQUM7Q0FDNUIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9teS13ZWJzaXRlLy4vcGFnZXMvYXBpL3VzZXJJbmZvQnlJUC9bdXNlckluZm9dLnRzPzNmMTEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGRlZmF1bHQgYXN5bmMgZnVuY3Rpb24gaGFuZGxlcihyZXEsIHJlcykge1xyXG4gICBjb25zdCBIYXNaaXBDb2RlID0gb2JqID0+IHtcclxuICAgICAgZm9yIChjb25zdCB4IG9mIG9iaikge1xyXG4gICAgICAgIGNvbnN0IGVsZW0gPSB4LmFkZHJlc3NfY29tcG9uZW50cztcclxuICAgICAgICBpZiAoIWlzTmFOKGVsZW1bZWxlbS5sZW5ndGggLSAxXS5sb25nX25hbWUucmVwbGFjZUFsbCgnICcsICcnKSkpIHtcclxuICAgICAgICAgIHJldHVybiBlbGVtW2VsZW0ubGVuZ3RoIC0gMV0ubG9uZ19uYW1lO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgICByZXR1cm4gXCIwMDAwMFwiO1xyXG4gICAgfTtcclxuICAgIGNvbnN0IGdldGNvZGluZyA9IGFzeW5jIChsYXQ6IHN0cmluZywgbG9uOiBzdHJpbmcpID0+IHtcclxuICAgICAgcmV0dXJuIGZldGNoKFxyXG4gICAgICAgIGBodHRwczovL21hcHMuZ29vZ2xlYXBpcy5jb20vbWFwcy9hcGkvZ2VvY29kZS9qc29uP2xhdGxuZz1gICtcclxuICAgICAgICAgIGxhdCArXHJcbiAgICAgICAgICBgLGAgK1xyXG4gICAgICAgICAgbG9uICtcclxuICAgICAgICAgIGAma2V5PWAgK1xyXG4gICAgICAgICAgcHJvY2Vzcy5lbnYuTkVYVF9QVUJMSUNfS0VZX0dPT0dMRV9BUElcclxuICAgICAgKVxyXG4gICAgICAgIC50aGVuKHJlcyA9PiByZXMuanNvbigpKVxyXG4gICAgICAgIC50aGVuKGRhdGEgPT4ge1xyXG4gICAgICAgICAgY29uc3QgcmVzdWx0ID0gZGF0YS5yZXN1bHRzO1xyXG4gICAgICAgICAgcmV0dXJuIEhhc1ppcENvZGUocmVzdWx0KTtcclxuICAgICAgICAgIC8vIHJldHVybiBkYXRhO1xyXG4gICAgICAgIH0pXHJcbiAgICAgICAgLmNhdGNoKGVyciA9PiB7XHJcbiAgICAgICAgICBjb25zb2xlLmVycm9yKFwiV2hlbiBmZXRjaGluZyBkYXRhIGZyb20gZ29vZ2xlIGFwaSA6IFxcblwiLCBlcnIpO1xyXG4gICAgICAgICAgcmV0dXJuIFwiMDAwMDBcIjtcclxuICAgICAgICB9KTtcclxuICAgIH07XHJcbiAgICBjb25zdCBnZW9sb2NhdGlvbiA9IGFzeW5jIGlwID0+IHtcclxuICAgICAgcmV0dXJuIGZldGNoKGBodHRwOi8vaXAtYXBpLmNvbS9qc29uL2AgKyBpcClcclxuICAgICAgICAudGhlbihyZXMgPT4gcmVzLmpzb24oKSlcclxuICAgICAgICAudGhlbihhc3luYyBkYXRhID0+IHtcclxuICAgICAgICAgIHJldHVybiAge1xyXG4gICAgICAgICAgICB6aXA6IGF3YWl0IGdldGNvZGluZyhkYXRhLmxhdCwgZGF0YS5sb24pLFxyXG4gICAgICAgICAgICBjb3VudHJ5OiBkYXRhLmNvdW50cnksXHJcbiAgICAgICAgICAgIGNvdW50cnlDb2RlOiBkYXRhLmNvdW50cnlDb2RlLFxyXG4gICAgICAgICAgICByZWdpb246IGRhdGEucmVnaW9uLFxyXG4gICAgICAgICAgICByZWdpb25OYW1lOiBkYXRhLnJlZ2lvbk5hbWUsXHJcbiAgICAgICAgICAgIGNpdHk6IGRhdGEuY2l0eSxcclxuICAgICAgICAgICAgZGF0ZXRpbWU6IG5ldyBEYXRlKCkudG9Mb2NhbGVTdHJpbmcoXCJlbi1VU1wiLCB7XHJcbiAgICAgICAgICAgICAgdGltZVpvbmU6IGRhdGEudGltZXpvbmUsXHJcbiAgICAgICAgICAgIH0pLFxyXG4gICAgICAgICAgICBsYXQ6IGRhdGEubGF0LFxyXG4gICAgICAgICAgICBsb246IGRhdGEubG9uLFxyXG4gICAgICAgICAgICB0aW1lem9uZTogZGF0YS50aW1lem9uZSxcclxuICAgICAgICAgICAgaXNwOiBkYXRhLmlzcCxcclxuICAgICAgICAgICAgb3JnOiBkYXRhLm9yZyxcclxuICAgICAgICAgICAgYXM6IGRhdGEuYXMsXHJcbiAgICAgICAgICAgIHF1ZXJ5OiBkYXRhLnF1ZXJ5LFxyXG4gICAgICAgICAgfTtcclxuICAgICAgICAgXHJcbiAgICAgICAgfSlcclxuICAgICAgICAuY2F0Y2goZXJyID0+IGNvbnNvbGUubG9nKGVycikpO1xyXG4gICAgfTtcclxuICAgIGNvbnN0IHJlc3VsdCA9IGF3YWl0IGdlb2xvY2F0aW9uKHJlcS5xdWVyeS51c2VySW5mbyk7XHJcbiAgIHJlcy5zdGF0dXMoMjAwKS5qc29uKHJlc3VsdClcclxuICB9Il0sIm5hbWVzIjpbImhhbmRsZXIiLCJyZXEiLCJyZXMiLCJIYXNaaXBDb2RlIiwib2JqIiwieCIsImVsZW0iLCJhZGRyZXNzX2NvbXBvbmVudHMiLCJpc05hTiIsImxlbmd0aCIsImxvbmdfbmFtZSIsInJlcGxhY2VBbGwiLCJnZXRjb2RpbmciLCJsYXQiLCJsb24iLCJmZXRjaCIsInByb2Nlc3MiLCJlbnYiLCJORVhUX1BVQkxJQ19LRVlfR09PR0xFX0FQSSIsInRoZW4iLCJqc29uIiwiZGF0YSIsInJlc3VsdCIsInJlc3VsdHMiLCJjYXRjaCIsImVyciIsImNvbnNvbGUiLCJlcnJvciIsImdlb2xvY2F0aW9uIiwiaXAiLCJ6aXAiLCJjb3VudHJ5IiwiY291bnRyeUNvZGUiLCJyZWdpb24iLCJyZWdpb25OYW1lIiwiY2l0eSIsImRhdGV0aW1lIiwiRGF0ZSIsInRvTG9jYWxlU3RyaW5nIiwidGltZVpvbmUiLCJ0aW1lem9uZSIsImlzcCIsIm9yZyIsImFzIiwicXVlcnkiLCJsb2ciLCJ1c2VySW5mbyIsInN0YXR1cyJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(api)/./pages/api/userInfoByIP/[userInfo].ts\n");

/***/ })

};
;

// load runtime
var __webpack_require__ = require("../../../webpack-api-runtime.js");
__webpack_require__.C(exports);
var __webpack_exec__ = (moduleId) => (__webpack_require__(__webpack_require__.s = moduleId))
var __webpack_exports__ = (__webpack_exec__("(api)/./pages/api/userInfoByIP/[userInfo].ts"));
module.exports = __webpack_exports__;

})();